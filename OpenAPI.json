openapi: 3.0.1
info:
  title: Grade API TEST
  description: Test documentation for Grade's API.
  version: '0.1'
  
servers:
  - url: 'https://develop.luvit.se/LuvitApi/v1'
  - url: 'https://localhost/Luvit.Api/v1'

paths:

  /user/setEmail:
    post:
      description: Update the currently logged in user's email.
      summary: POST new email for current user.
      parameters: 
        - in: query
          name: newUserEmail
          required: true
          schema:
            type: string
        - name: Cookie
          required: true
          in: header
          schema:
            type: string
      
      responses:
        '200':
          description: Email set successfully!
          content:
            application/json; charset=utf-8:
              schema:
                properties:
                  message:
                    type: string
                    example: success
      

  /education/programs/teamstats/{teamId}:
    get:
      description: Get programs stats for a team.
      summary: GET Team stats.
      parameters:
        - in: path
          name: teamId
          required: true
          schema:
            type: integer
        - in: query
          name: startDate
          required: true
          schema:
            type: string
        - in: query
          name: endDate
          required: true
          schema:
            type: string
        - name: Cookie
          required: true
          in: header
          schema:
            type: string
      
      responses:
        '200':
          description: Data returned successfully!
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ProgramStatss'
      
        '401':
          description: Invalid Cookie (used for authorization)!
          content:
            application/json; charset=utf-8:
              schema:
                properties:
                  message:
                    type: string
                    example: Authorization has been denied for this request.      
  
  /coursecatalogue/{unitId}:
    get:
      description: Get courses in course catalogue for a specific unit.
      summary: GET Course catalogue
      parameters: 
        - in: path
          name: unitId
          schema:
            type: integer
          required: true
        - name: Cookie
          required: true
          in: header
          schema:
            type: string
      
      responses:
        '200':
          description: Data returned successfully!
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Courses'
      
        '401':
          description: Invalid Cookie (used for authorization)!
          content:
            application/json; charset=utf-8:
              schema:
                properties:
                  message:
                    type: string
                    example: Authorization has been denied for this request.

                    
  /engagement/dataforunit:
    get:
      description: Returns data for the unit.
      parameters:
        - name: selectionId
          in: query
          schema:
            type: string
            example: '1'
        - name: languageId
          in: query
          schema:
            type: string
            example: '1'
        - name: type
          in: query
          schema:
            type: string
            example: hello
        - name: Cookie
          in: header
          schema:
            type: string
            
      responses:
        '200':
          description: Data returned successfully!
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitData'
                
        '401':
          description: Invalid Cookie (used for authorization)!
          content:
            application/json; charset=utf-8:
              schema:
                properties:
                  message:
                    type: string
                    example: Authorization has been denied for this request.

components:
  schemas:
  
    ProgramStats:
      description: Program stats.
      properties:
        CourseObjectId:
          type: integer
        ActivityId:
          type: integer
        Title:
          type: string
        Description:
          type: string
        NoOfRegistered:
          type: integer
        NoOfCompleted:
          type: integer
        Summary:
          type: string
        StartDate:
          type: string
        EndDate:
          type: string
        Responsible:
          type: string
        
    
    ProgramStatss:
      description: Array of ProgramStats.
      type: array
      items:
        $ref: '#/components/schemas/ProgramStats'
    
    Courses:
      description: Array of LacapiCourseCatalogueCourse.
      type: array
      items: 
        $ref: '#/components/schemas/LacapiCourseCatalogueCourse'
    
    LacapiCourseCatalogueCourse:
      description: A course.
      properties:
        courseId: 
          type: integer
        courseObjectId:
          type: integer
        title: 
          type: string
        description:
          type: string
        image:
          type: object
        type:
          type: string
        courseDetails:
          type: string
    
    UnitData:
      type: object
      description: Collection of unit data.
      properties:
        EngagementStatus:
          type: object
          properties:
            noActiveSurveys: 
              type: boolean
            notEnoughAnswers:
              type: boolean
            minNbrOfAnswers:
              type: integer
        engagementSurveys:
          type: array
          items: 
            type: string
        averages:
          type: array
          items:
            type: string
            
#  /users/helloworld:
#    get:
#      description: Returns the string "Hello World!", if you ask nicely.
#      responses:
#        '200':
#          description: The string was successfully returned.
#          content:
#            application/json; charset=utf-8:
#              schema:
#                properties:
#                  response:
#                    type: string
#                    example: Hello World!
#        '401':
#          description: Authorization was denied.
#          content:
#            application/json; charset=utf-8:
#              schema:
#                properties:
#                  message:
#                    type: string
#                    example: Authorization has been denied for this request.
  
#  /users/echo:
#    get:
#      description: Returns the given input string
#      parameters:
#        - name: input
#          in: query
#          description: The string to be returned
#          schema:
#            type: string
#            example: Echo!
#      
#      responses:
#        '200':
#          description: The input string was successfully returned.
#          content:
#            application/json; charset=utf-8:
#              schema:
#                properties:
#                  response:
#                    type: string
#                    example: Echo!
#        '401':
#          description: Authorization was denied.
#          content:
#            application/json; charset=utf-8:
#              schema:
#                properties:
#                  message:
#                    type: string
#                    example: Authorization has been denied for this request.
    
#  /coursecatalogue:
#    get:
#      description: Returns the course catalogue for the PersonalId on the PostalSiteId and in the Categories, filtered by SearchField.
#      parameters:
#        - name: PersonalId
#          in: query
#          required: true
#          schema:
#            type: string
#            example: 1C4F7518-6DAD-4573-9E48-218E1EB8E05C
#        - name: SearchField
#          in: query
#          allowEmptyValue: true
#          schema:
#            type: string
#            example: Management
#        - name: Categories
#          in: query
#          required: false
#          schema:
#            type: string
#        - name: Categories
#          in: query
#          required: false
#          schema:
#            type: string
#        - name: Categories
#          in: query
#          required: false
#          schema:
#            type: string
#        - name: Categories
#          in: query
#          required: false
#          schema:
#            type: string
#        - name: Categories
#          in: query
#          required: false
#          schema:
#            type: string
#        - name: PortalSiteId
#          in: query
#          required: true
#          schema:
#            type: string
#            example: '1'
#        - name: Cookie
#          in: header
#          schema:
#            type: string
#            example: 
#      responses:
#        '200':
#          description: The course catalogue
#          content:
#            application/json; charset=utf-8:
#              schema:
#                $ref: '#/components/schemas/Courses'